{% extends "basic-slide.html" %}

{% set title = "Push to talk" %}

{% block content %}
{% raw %}

class: middle, center, inverse

# ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !
# Start using git today
# Get a backup FOR FREE
# ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !

---

# __De__centralized version control

`git` is a **decentralized** version control system

Every repository contains the full version history

This is useful as it allows you to work without depending on a remote server

But, it might be useful to **backup** your repository on an external
machine from time to time (e.g. GitHub, GitLab, ...)

---

# Working with a remote

1. Setup a **remote** repository:
   ```bash
   git remote add origin https://github.com/user/repo.git
   ```
   (When you `git clone` an existing repository, the remote is already
   configured)

3. Use your normal `add`, `commit` workflow to work on your code

2. Simply **push** your changes to a different machine to **backup** your work
   ```bash
   git push
   ```

---

# Collaboration

 * There are different providers that allow users to host their git
 repositories (Github, GitLab, Bitbucket).

* This is a crucial part in **collaborating** with other developers, for
example in the process of open source software development.

--

* You can **fork** a repository to create your own copy server-side

* After pushing your changes to your fork you can request the original author
to pull your changes to their repository (open a **pull request**)

{% endraw %}
{% endblock content %}
